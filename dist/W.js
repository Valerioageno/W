/*! For license information please see W.js.LICENSE.txt */
var W;(()=>{var __webpack_modules__={"./src/core/index.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval("/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ Renderer)\n/* harmony export */ });\n/* harmony import */ var _shaders_baseVertex_glsl__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../shaders/baseVertex.glsl */ \"./src/shaders/baseVertex.glsl\");\n/* harmony import */ var _shaders_baseFragment_glsl__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../shaders/baseFragment.glsl */ \"./src/shaders/baseFragment.glsl\");\n// WebGL framework\n// ===============\n\n\nclass Renderer {\n  constructor(options) {\n    this.debug = options.debug; // Enable shader/program compilation logs (optional)\n\n    this.reset(options.canvas); // List of 3D models that can be rendered by the framework\n    // (See the end of the file for built-in models: plane, billboard, cube, pyramid...)\n\n    this.models = {}; // List of renderers\n    // (see the end of the file for built-in renderers: triangles, lines...)\n\n    this.renderers = {};\n  } // Reset the framework\n  // param: a <canvas> element\n\n\n  reset(canvas) {\n    // Globals\n    this.canvas = canvas; // canvas element\n\n    this.objs = 0; // Object counter\n\n    this.current = {}; // Objects current states\n\n    this.next = {}; // Objects next states\n\n    this.textures = {}; // Textures list\n    // WebGL context\n\n    this.gl = this.canvas.getContext('webgl2'); // Default blending method for transparent objects\n\n    this.gl.blendFunc(770\n    /* SRC_ALPHA */\n    , 771\n    /* ONE_MINUS_SRC_ALPHA */\n    ); // Enable texture 0\n\n    this.gl.activeTexture(33984\n    /* TEXTURE0 */\n    ); // Create a WebGL program\n\n    this.program = this.gl.createProgram(); // Hide polygons back-faces (optional)\n    //W.gl.enable(2884 /* CULL_FACE */);\n    // Create a Vertex shader\n    // (this GLSL program is called for every vertex of the scene)\n\n    this.gl.shaderSource(this.t = this.gl.createShader(35633\n    /* VERTEX_SHADER */\n    ), _shaders_baseVertex_glsl__WEBPACK_IMPORTED_MODULE_0__[\"default\"]); // Compile the Vertex shader and attach it to the program\n\n    this.gl.compileShader(this.t);\n    this.gl.attachShader(this.program, this.t);\n    if (this.debug) console.log('vertex shader:', this.gl.getShaderInfoLog(this.t) || 'OK'); // Create a Fragment shader\n    // (This GLSL program is called for every fragment (pixel) of the scene)\n\n    this.gl.shaderSource(this.t = this.gl.createShader(35632\n    /* FRAGMENT_SHADER */\n    ), _shaders_baseFragment_glsl__WEBPACK_IMPORTED_MODULE_1__[\"default\"]); // Compile the Fragment shader and attach it to the program\n\n    this.gl.compileShader(this.t);\n    this.gl.attachShader(this.program, this.t);\n    if (this.debug) console.log('fragment shader:', this.gl.getShaderInfoLog(this.t) || 'OK'); // Compile the program\n\n    this.gl.linkProgram(this.program);\n    this.gl.useProgram(this.program);\n    if (this.debug) console.log('program:', this.gl.getProgramInfoLog(this.program) || 'OK'); // Set the scene's background color (RGBA)\n\n    this.gl.clearColor(1, 1, 1, 1); // Shortcut to set the clear color\n\n    this.clearColor = c => this.gl.clearColor(...this.col(c));\n\n    this.clearColor(\"ffff\"); // Enable fragments depth sorting\n    // (the fragments of close objects will automatically overlap the fragments of further objects)\n\n    this.gl.enable(2929\n    /* DEPTH_TEST */\n    ); // When everything is loaded: set default light / camera, and draw the scene\n\n    this.light({\n      y: -1\n    });\n    this.camera({\n      fov: 30\n    });\n    this.draw();\n  }\n\n  // Set a state to an object\n  setState(state, type, texture, i, normal = [], A, B, C, Ai, Bi, Ci, AB, BC) {\n    // Custom name or default name ('o' + auto-increment)\n    this.state = state;\n    this.state.n ||= 'o' + this.objs++; // Size sets w, h and d at once (optional)\n\n    if (this.state.size) this.state.w = this.state.h = this.state.d = this.state.size; // If a new texture is provided, build it and save it in W.textures\n\n    if (this.state.t && this.state.t.width && !this.textures[this.state.t.id]) {\n      this.texture = this.gl.createTexture();\n      this.gl.pixelStorei(37441\n      /* UNPACK_PREMULTIPLY_ALPHA_WEBGL */\n      , true);\n      this.gl.bindTexture(3553\n      /* TEXTURE_2D */\n      , this.texture);\n      this.gl.pixelStorei(37440\n      /* UNPACK_FLIP_Y_WEBGL */\n      , 1);\n      this.gl.texImage2D(3553\n      /* TEXTURE_2D */\n      , 0, 6408\n      /* RGBA */\n      , 6408\n      /* RGBA */\n      , 5121\n      /* UNSIGNED_BYTE */\n      , this.state.t);\n      this.gl.generateMipmap(3553\n      /* TEXTURE_2D */\n      );\n      this.textures[this.state.t.id] = this.texture;\n    } // Save object's type,\n    // merge previous state (or default state) with the new state passed in parameter,\n    // and reset f (the animation timer)\n\n\n    this.state = {\n      type,\n      ...(this.current[this.state.n] = this.next[this.state.n] || {\n        w: 1,\n        h: 1,\n        d: 1,\n        x: 0,\n        y: 0,\n        z: 0,\n        rx: 0,\n        ry: 0,\n        rz: 0,\n        b: '888',\n        mode: 4,\n        mix: 0\n      }),\n      ...this.state,\n      f: 0\n    };\n\n    if (this.model) {\n      // Build the model's vertices buffer if it doesn't exist yet\n      if (this.models[this.state.type]?.vertices && !this.models?.[this.state.type].verticesBuffer) {\n        this.gl.bindBuffer(34962\n        /* ARRAY_BUFFER */\n        , this.models[this.state.type].verticesBuffer = this.gl.createBuffer());\n        this.gl.bufferData(34962\n        /* ARRAY_BUFFER */\n        , new Float32Array(this.models[this.state.type].vertices), 35044\n        /*STATIC_DRAW*/\n        );\n      } // Build the model's uv buffer (if any) if it doesn't exist yet\n\n\n      if (this.models[this.state.type]?.uv && !this.models[this.state.type].uvBuffer) {\n        this.gl.bindBuffer(34962\n        /* ARRAY_BUFFER */\n        , this.models[this.state.type].uvBuffer = this.gl.createBuffer());\n        this.gl.bufferData(34962\n        /* ARRAY_BUFFER */\n        , new Float32Array(this.models[this.state.type].uv), 35044\n        /*STATIC_DRAW*/\n        );\n      } // Build the model's index buffer (if any) and smooth normals if they don't exist yet\n\n\n      if (this.models[this.state.type]?.indices && !this.models[this.state.type].indicesBuffer) {\n        this.gl.bindBuffer(34963\n        /* ELEMENT_ARRAY_BUFFER */\n        , this.models[this.state.type].indicesBuffer = this.gl.createBuffer());\n        this.gl.bufferData(34963\n        /* ELEMENT_ARRAY_BUFFER */\n        , new Uint16Array(this.models[state.type].indices), 35044\n        /* STATIC_DRAW */\n        ); // Compute smooth normals (optional)\n\n        if (!this.models[this.state.type].smoothNormals && this.smooth) this.smooth(this.state); // Make a buffer from the smooth normals (if any)\n\n        if (this.models[this.state.type].smoothNormals) {\n          // Smooth normals buffer\n          this.gl.bindBuffer(34962\n          /* ARRAY_BUFFER */\n          , this.models[this.state.type].smoothNormalsBuffer = this.gl.createBuffer());\n          this.gl.bufferData(34962\n          /* ARRAY_BUFFER */\n          , new Float32Array(this.models[this.state.type].smoothNormals.flat()), 35044\n          /*STATIC_DRAW*/\n          );\n        }\n      }\n    } // Set mix to 1 if no texture is set\n\n\n    if (!this.state.t) {\n      this.state.mix = 1;\n    } // set mix to 0 by default if a texture is set\n    else if (this.state.t && !this.state.mix) {\n      this.state.mix = 0;\n    } // Save new state\n\n\n    this.next[this.state.n] = this.state; // Set fov if the camera's state contains it\n\n    if (this.state.fov) {\n      this.perspective = new DOMMatrix([1 / Math.tan(this.state.fov * .0175) / (this.canvas.width / this.canvas.height), 0, 0, 0, 0, 1 / Math.tan(this.state.fov * .0175), 0, 0, 0, 0, (999 + 1) * 1 / (1 - 999), -1, 0, 0, 2 * 1 * 999 * 1 / (1 - 999), 0]);\n    }\n  }\n\n  // Draw the scene\n  draw(now = 0, dt, v, i, transparent = []) {\n    this.lastFrame ||= 0; // Loop and measure time delta between frames\n\n    this.dt = now - this.lastFrame;\n    this.lastFrame = now; // Clear canvas\n\n    this.gl.clear(16640\n    /* W.gl.COLOR_BUFFER_BIT | W.gl.DEPTH_BUFFER_BIT */\n    ); // Create a matrix called v containing the current camera transformation\n\n    this.v = v;\n    this.v = this.animation('camera'); // Send it to the shaders as the Eye matrix\n\n    this.gl.uniformMatrix4fv(this.gl.getUniformLocation(this.program, 'eye'), false, this.v.toFloat32Array()); // Invert it to obtain the View matrix\n\n    this.v.invertSelf(); // Premultiply it with the Perspective matrix to obtain a Projection-View matrix\n\n    this.v.preMultiplySelf(this.perspective); // send it to the shaders as the pv matrix\n\n    this.gl.uniformMatrix4fv(this.gl.getUniformLocation(this.program, 'pv'), false, this.v.toFloat32Array()); // Transition the light's direction and send it to the shaders\n\n    this.gl.uniform3f(this.gl.getUniformLocation(this.program, 'light'), this.lerp('light', 'x'), this.lerp('light', 'y'), this.lerp('light', 'z')); // Render all the objects in the scene\n\n    for (i in this.next) {\n      // Render the shapes with no texture and no transparency (RGB1 color)\n      if (!this.next[i].t && this.col(this.next[i].b)[3] == 1) {\n        this.render(this.next[i], this.dt);\n      } // Add the objects with transparency (RGBA or texture) in an array\n      else {\n        this.transparent.push(this.next[i]);\n      }\n    } // Order transparent objects from back to front\n\n\n    transparent.sort((a, b) => {\n      // Return a value > 0 if b is closer to the camera than a\n      // Return a value < 0 if a is closer to the camera than b\n      return this.dist(b) - this.dist(a);\n    }); // Enable alpha plending\n\n    this.gl.enable(3042\n    /* BLEND */\n    ); // Render the objects\n\n    for (i in this.transparent) {\n      this.render(this.transparent[i], this.dt);\n    } // Disable alpha blending for next frame\n\n\n    this.gl.disable(3042\n    /* BLEND */\n    );\n    window.requestAnimationFrame(() => this.draw());\n  }\n\n  addModel(state, type, buffer) {\n    this.model[type] = buffer;\n    this.setState(state, type);\n  } // Render an object\n\n\n  render(object, dt, buffer) {\n    this.object = object; // If the object has a texture\n\n    if (this.object.t) {\n      // Set the texture's target (2D or cubemap)\n      this.gl.bindTexture(3553\n      /* TEXTURE_2D */\n      , this.textures[this.object.t.id]); // Pass texture 0 to the sampler\n\n      this.gl.uniform1i(this.gl.getUniformLocation(this.program, 'sampler'), 0);\n    } // If the object has an animation, increment its timer...\n\n\n    if (this.object.f < this.object.a) this.object.f += this.dt; // ...but don't let it go over the animation duration.\n\n    if (this.object.f > this.object.a) this.object.f = this.object.a; // Compose the model matrix from lerped transformations\n\n    this.next[this.object.n].m = this.animation(this.object.n); // If the object is in a group:\n\n    if (this.next[this.object.g]) {\n      // premultiply the model matrix by the group's model matrix.\n      this.next[this.object.n].m.preMultiplySelf(this.next[this.object.g].M || this.next[this.object.g].m);\n    } // send the model matrix to the vertex shader\n\n\n    this.gl.uniformMatrix4fv(this.gl.getUniformLocation(this.program, 'm'), false, (this.next[this.object.n].M || this.next[this.object.n].m).toFloat32Array()); // send the inverse of the model matrix to the vertex shader\n\n    this.gl.uniformMatrix4fv(this.gl.getUniformLocation(this.program, 'im'), false, new DOMMatrix(this.next[this.object.n].M || this.next[this.object.n].m).invertSelf().toFloat32Array()); // Don't render invisible items (camera, light, groups)\n\n    if (!['camera', 'light', 'group'].includes(this.object.type)) {\n      // Set up the position buffer\n      this.gl.bindBuffer(34962\n      /* ARRAY_BUFFER */\n      , this.models[this.object.type].verticesBuffer);\n      this.gl.vertexAttribPointer(this.buffer = this.gl.getAttribLocation(this.program, 'pos'), 3, 5126\n      /* FLOAT */\n      , false, 0, 0);\n      this.gl.enableVertexAttribArray(this.buffer); // Set up the texture coordinatess buffer (if any)\n\n      if (this.models[this.object.type].uvBuffer) {\n        this.gl.bindBuffer(34962\n        /* ARRAY_BUFFER */\n        , this.models[this.object.type].uvBuffer);\n        this.gl.vertexAttribPointer(this.buffer = this.gl.getAttribLocation(this.program, 'uv'), 2, 5126\n        /* FLOAT */\n        , false, 0, 0);\n        this.gl.enableVertexAttribArray(this.buffer);\n      } // Set the normals buffer\n\n\n      if (this.object.s && this.models[this.object.type].smoothNormalsBuffer) {\n        this.gl.bindBuffer(34962\n        /* ARRAY_BUFFER */\n        , this.models[this.object.type].smoothNormalsBuffer);\n        this.gl.vertexAttribPointer(this.buffer = this.gl.getAttribLocation(this.program, 'normal'), 3, 5126\n        /* FLOAT */\n        , false, 0, 0);\n        this.gl.enableVertexAttribArray(this.buffer);\n      } // Other options: [smooth, shading enabled, ambient light, texture/color mix]\n\n\n      this.gl.uniform4f(this.gl.getUniformLocation(this.program, 'o'), // Enable smooth shading if \"s\" is true\n      this.object.s, // Enable shading if in TRIANGLE* mode and object.ns disabled\n      (this.object.mode > 3 || this.gl[this.object.mode] > 3) && !this.object.ns ? 1 : 0, // Ambient light\n      this.ambientLight || 0.2, // Texture/color mix (if a texture is present. 0: fully textured, 1: fully colored)\n      this.object.mix); // If the object is a billboard: send a specific uniform to the shaders:\n      // [width, height, isBillboard = 1, 0]\n\n      this.gl.uniform4f(this.gl.getUniformLocation(this.program, 'bb'), // Size\n      this.object.w, this.object.h, // is a billboard\n      this.object.type == 'billboard', // Reserved\n      0); // Set up the indices (if any)\n\n      if (this.models[this.object.type].indicesBuffer) {\n        this.gl.bindBuffer(34963\n        /* ELEMENT_ARRAY_BUFFER */\n        , this.models[this.object.type].indicesBuffer);\n      } // Use a renderer (custom / default)\n\n\n      if (this.object.r) {\n        this.renderers[this.object.r](this.object);\n      } else {\n        // Set the object's color\n        this.gl.vertexAttrib4fv(this.gl.getAttribLocation(this.program, 'col'), this.col(this.object.b)); // Draw\n        // Both indexed and unindexed models are supported.\n        // You can keep the \"drawElements\" only if all your models are indexed.\n\n        if (this.models[this.object.type].indicesBuffer) {\n          this.gl.drawElements(+this.object.mode || this.gl[this.object.mode], this.models[this.object.type].indices.length, 5123\n          /* UNSIGNED_SHORT */\n          , 0);\n        } else {\n          this.gl.drawArrays(+this.object.mode || this.gl[this.object.mode], 0, this.models[this.object.type].vertices.length / 3);\n        }\n      }\n    }\n  } // Helpers\n  // -------\n  // Interpolate a property between two values\n\n\n  lerp(item, property) {\n    return this.next[item]?.a ? this.current[item][property] + (this.next[item][property] - this.current[item][property]) * (this.next[item].f / this.next[item].a) : this.next[item][property];\n  } // Transition an item\n\n\n  animation(item, m = new DOMMatrix()) {\n    return this.next[item] ? m.translateSelf(this.lerp(item, 'x'), this.lerp(item, 'y'), this.lerp(item, 'z')).rotateSelf(this.lerp(item, 'rx'), this.lerp(item, 'ry'), this.lerp(item, 'rz')).scaleSelf(this.lerp(item, 'w'), this.lerp(item, 'h'), this.lerp(item, 'd')) : m;\n  } // Compute the distance squared between two objects (useful for sorting transparent items)\n\n\n  dist(a, b = this.next.camera) {\n    return a?.m && b?.m ? (b.m.m41 - a.m.m41) ** 2 + (b.m.m42 - a.m.m42) ** 2 + (b.m.m43 - a.m.m43) ** 2 : 0;\n  } // Set the ambient light level (0 to 1)\n\n\n  ambient(a) {\n    return this.ambientLight = a;\n  } // Convert an rgb/rgba hex string into a vec4\n\n\n  col(c) {\n    c = c.replace(\"#\", \"\");\n    if (c.length < 5) return [...[...c].map(a => ('0x' + a) / 15), 1]; // rgb / rgba\n    else return [...c.match(/../g).map(a => ('0x' + a) / 255), 1]; // rrggbb / rrggbbaa\n  } // Add a new 3D model\n\n\n  add(name, objects) {\n    this.models[name] = objects;\n\n    this[name] = settings => this.setState(settings, name);\n  } // Built-in objects\n  // ----------------\n\n\n  group(t) {\n    return this.setState(t, 'group');\n  }\n\n  move(t, delay) {\n    setTimeout(() => {\n      this.setState(t);\n    }, delay || 1);\n  }\n\n  delete(t, delay) {\n    setTimeout(() => {\n      delete this.next[t.n];\n    }, delay || 1);\n  }\n\n  camera(t, delay) {\n    setTimeout(() => {\n      this.setState(t, t.n = 'camera');\n    }, delay || 1);\n  }\n\n  light(t, delay) {\n    delay ? setTimeout(() => {\n      this.setState(t, t.n = 'light');\n    }, delay) : this.setState(t, t.n = 'light');\n  }\n\n}\n;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/core/index.js\n")},"./src/index.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   "Models": () => (/* reexport module object */ _models_index__WEBPACK_IMPORTED_MODULE_0__),\n/* harmony export */   "W": () => (/* reexport safe */ _core__WEBPACK_IMPORTED_MODULE_1__["default"])\n/* harmony export */ });\n/* harmony import */ var _models_index__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./models/index */ "./src/models/index.js");\n/* harmony import */ var _core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./core */ "./src/core/index.js");\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvaW5kZXguanMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9XLy4vc3JjL2luZGV4LmpzP2I2MzUiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0ICogYXMgTW9kZWxzIGZyb20gJy4vbW9kZWxzL2luZGV4J1xuaW1wb3J0IHtkZWZhdWx0IGFzIFd9IGZyb20gJy4vY29yZSdcblxuZXhwb3J0IHtcbiAgICBNb2RlbHMsXG4gICAgV1xufSJdLCJuYW1lcyI6WyJNb2RlbHMiLCJkZWZhdWx0IiwiVyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/index.js\n')},"./src/models/cube.js":(module,__unused_webpack_exports,__webpack_require__)=>{eval("/* module decorator */ module = __webpack_require__.nmd(module);\n// Cube\n//\n//    v6----- v5\n//   /|      /|\n//  v1------v0|\n//  | |  x  | |\n//  | |v7---|-|v4\n//  |/      |/\n//  v2------v3\nmodule.export = {\n  vertices: [.5, .5, .5, -.5, .5, .5, -.5, -.5, .5, // front\n  .5, .5, .5, -.5, -.5, .5, .5, -.5, .5, .5, .5, -.5, .5, .5, .5, .5, -.5, .5, // right\n  .5, .5, -.5, .5, -.5, .5, .5, -.5, -.5, .5, .5, -.5, -.5, .5, -.5, -.5, .5, .5, // up\n  .5, .5, -.5, -.5, .5, .5, .5, .5, .5, -.5, .5, .5, -.5, .5, -.5, -.5, -.5, -.5, // left\n  -.5, .5, .5, -.5, -.5, -.5, -.5, -.5, .5, -.5, .5, -.5, .5, .5, -.5, .5, -.5, -.5, // back\n  -.5, .5, -.5, .5, -.5, -.5, -.5, -.5, -.5, .5, -.5, .5, -.5, -.5, .5, -.5, -.5, -.5, // down\n  .5, -.5, .5, -.5, -.5, -.5, .5, -.5, -.5],\n  uv: [1, 1, 0, 1, 0, 0, // front\n  1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, // right\n  1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, // up\n  1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, // left\n  1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, // back\n  1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, // down\n  1, 1, 0, 0, 1, 0]\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,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LENBSE4sRUFHUyxDQUhULEVBR2MsQ0FIZCxFQUdpQixDQUhqQixFQUdvQjtBQUN0QixHQUpFLEVBSUMsQ0FKRCxFQUlNLENBSk4sRUFJUyxDQUpULEVBSWMsQ0FKZCxFQUlpQixDQUpqQixFQUtGLENBTEUsRUFLQyxDQUxELEVBS00sQ0FMTixFQUtTLENBTFQsRUFLYyxDQUxkLEVBS2lCLENBTGpCLEVBS29CO0FBQ3RCLEdBTkUsRUFNQyxDQU5ELEVBTU0sQ0FOTixFQU1TLENBTlQsRUFNYyxDQU5kLEVBTWlCLENBTmpCLEVBT0YsQ0FQRSxFQU9DLENBUEQsRUFPTSxDQVBOLEVBT1MsQ0FQVCxFQU9jLENBUGQsRUFPaUIsQ0FQakIsRUFPb0I7QUFDdEIsR0FSRSxFQVFDLENBUkQsRUFRTSxDQVJOLEVBUVMsQ0FSVCxFQVFjLENBUmQsRUFRaUIsQ0FSakIsRUFTRixDQVRFLEVBU0MsQ0FURCxFQVNNLENBVE4sRUFTUyxDQVRULEVBU2MsQ0FUZCxFQVNpQixDQVRqQixFQVNvQjtBQUN0QixHQVZFLEVBVUMsQ0FWRCxFQVVNLENBVk4sRUFVUyxDQVZULEVBVWMsQ0FWZCxFQVVpQixDQVZqQixFQVdGLENBWEUsRUFXQyxDQVhELEVBV00sQ0FYTixFQVdTLENBWFQsRUFXYyxDQVhkLEVBV2lCLENBWGpCLEVBV29CO0FBQ3RCLEdBWkUsRUFZQyxDQVpELEVBWU0sQ0FaTixFQVlTLENBWlQsRUFZYyxDQVpkLEVBWWlCLENBWmpCO0FBZlUsQ0FBaEIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9XLy4vc3JjL21vZGVscy9jdWJlLmpzPzY2OWEiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gQ3ViZVxuLy9cbi8vICAgIHY2LS0tLS0gdjVcbi8vICAgL3wgICAgICAvfFxuLy8gIHYxLS0tLS0tdjB8XG4vLyAgfCB8ICB4ICB8IHxcbi8vICB8IHx2Ny0tLXwtfHY0XG4vLyAgfC8gICAgICB8L1xuLy8gIHYyLS0tLS0tdjNcblxubW9kdWxlLmV4cG9ydCA9IHtcbiAgdmVydGljZXM6IFtcbiAgICAuNSwgLjUsIC41LCAgLS41LCAuNSwgLjUsICAtLjUsLS41LCAuNSwgLy8gZnJvbnRcbiAgICAuNSwgLjUsIC41LCAgLS41LC0uNSwgLjUsICAgLjUsLS41LCAuNSxcbiAgICAuNSwgLjUsLS41LCAgIC41LCAuNSwgLjUsICAgLjUsLS41LCAuNSwgLy8gcmlnaHRcbiAgICAuNSwgLjUsLS41LCAgIC41LC0uNSwgLjUsICAgLjUsLS41LC0uNSxcbiAgICAuNSwgLjUsLS41LCAgLS41LCAuNSwtLjUsICAtLjUsIC41LCAuNSwgLy8gdXBcbiAgICAuNSwgLjUsLS41LCAgLS41LCAuNSwgLjUsICAgLjUsIC41LCAuNSxcbiAgICAtLjUsIC41LCAuNSwgIC0uNSwgLjUsLS41LCAgLS41LC0uNSwtLjUsIC8vIGxlZnRcbiAgICAtLjUsIC41LCAuNSwgIC0uNSwtLjUsLS41LCAgLS41LC0uNSwgLjUsXG4gICAgLS41LCAuNSwtLjUsICAgLjUsIC41LC0uNSwgICAuNSwtLjUsLS41LCAvLyBiYWNrXG4gICAgLS41LCAuNSwtLjUsICAgLjUsLS41LC0uNSwgIC0uNSwtLjUsLS41LFxuICAgIC41LC0uNSwgLjUsICAtLjUsLS41LCAuNSwgIC0uNSwtLjUsLS41LCAvLyBkb3duXG4gICAgLjUsLS41LCAuNSwgIC0uNSwtLjUsLS41LCAgIC41LC0uNSwtLjVcbiAgXSxcbiAgdXY6IFtcbiAgICAxLCAxLCAgIDAsIDEsICAgMCwgMCwgLy8gZnJvbnRcbiAgICAxLCAxLCAgIDAsIDAsICAgMSwgMCwgICAgICAgICAgICBcbiAgICAxLCAxLCAgIDAsIDEsICAgMCwgMCwgLy8gcmlnaHRcbiAgICAxLCAxLCAgIDAsIDAsICAgMSwgMCwgXG4gICAgMSwgMSwgICAwLCAxLCAgIDAsIDAsIC8vIHVwXG4gICAgMSwgMSwgICAwLCAwLCAgIDEsIDAsXG4gICAgMSwgMSwgICAwLCAxLCAgIDAsIDAsIC8vIGxlZnRcbiAgICAxLCAxLCAgIDAsIDAsICAgMSwgMCxcbiAgICAxLCAxLCAgIDAsIDEsICAgMCwgMCwgLy8gYmFja1xuICAgIDEsIDEsICAgMCwgMCwgICAxLCAwLFxuICAgIDEsIDEsICAgMCwgMSwgICAwLCAwLCAvLyBkb3duXG4gICAgMSwgMSwgICAwLCAwLCAgIDEsIDBcbiAgXVxufTsiXSwibmFtZXMiOlsibW9kdWxlIiwiZXhwb3J0IiwidmVydGljZXMiLCJ1diJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/models/cube.js\n")},"./src/models/index.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   "Cube": () => (/* reexport default from dynamic */ _cube__WEBPACK_IMPORTED_MODULE_0___default.a),\n/* harmony export */   "Plane": () => (/* reexport default from dynamic */ _plane__WEBPACK_IMPORTED_MODULE_1___default.a),\n/* harmony export */   "Pyramid": () => (/* reexport default from dynamic */ _pyramid__WEBPACK_IMPORTED_MODULE_2___default.a),\n/* harmony export */   "Sphere": () => (/* reexport default from dynamic */ _sphere__WEBPACK_IMPORTED_MODULE_3___default.a)\n/* harmony export */ });\n/* harmony import */ var _cube__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./cube */ "./src/models/cube.js");\n/* harmony import */ var _cube__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_cube__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _plane__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./plane */ "./src/models/plane.js");\n/* harmony import */ var _plane__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_plane__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _pyramid__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./pyramid */ "./src/models/pyramid.js");\n/* harmony import */ var _pyramid__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_pyramid__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _sphere__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./sphere */ "./src/models/sphere.js");\n/* harmony import */ var _sphere__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_sphere__WEBPACK_IMPORTED_MODULE_3__);\n\n\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvbW9kZWxzL2luZGV4LmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vVy8uL3NyYy9tb2RlbHMvaW5kZXguanM/M2EzNCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgQ3ViZSBmcm9tICcuL2N1YmUnXG5pbXBvcnQgUGxhbmUgZnJvbSAnLi9wbGFuZSdcbmltcG9ydCBQeXJhbWlkIGZyb20gJy4vcHlyYW1pZCdcbmltcG9ydCBTcGhlcmUgZnJvbSAnLi9zcGhlcmUnXG5cbmV4cG9ydCB7XG4gICAgQ3ViZSxcbiAgICBQbGFuZSxcbiAgICBQeXJhbWlkLFxuICAgIFNwaGVyZVxufVxuXG4iXSwibmFtZXMiOlsiQ3ViZSIsIlBsYW5lIiwiUHlyYW1pZCIsIlNwaGVyZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/models/index.js\n')},"./src/models/plane.js":module=>{eval("// Plane / billboard\n//\n//  v1------v0\n//  |       |\n//  |   x   |\n//  |       |\n//  v2------v3\nmodule.exports = {\n  vertices: [.5, .5, 0, -.5, .5, 0, -.5, -.5, 0, .5, .5, 0, -.5, -.5, 0, .5, -.5, 0],\n  uv: [1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0]\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9XLy4vc3JjL21vZGVscy9wbGFuZS5qcz9lZTRmIl0sIm5hbWVzIjpbIm1vZHVsZSIsImV4cG9ydHMiLCJ2ZXJ0aWNlcyIsInV2Il0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBQSxNQUFNLENBQUNDLE9BQVAsR0FBaUI7QUFDYkMsRUFBQUEsUUFBUSxFQUFFLENBQ1IsRUFEUSxFQUNKLEVBREksRUFDQSxDQURBLEVBQ00sQ0FBQyxFQURQLEVBQ1csRUFEWCxFQUNlLENBRGYsRUFDb0IsQ0FBQyxFQURyQixFQUN3QixDQUFDLEVBRHpCLEVBQzZCLENBRDdCLEVBRVIsRUFGUSxFQUVKLEVBRkksRUFFQSxDQUZBLEVBRU0sQ0FBQyxFQUZQLEVBRVUsQ0FBQyxFQUZYLEVBRWUsQ0FGZixFQUVxQixFQUZyQixFQUV3QixDQUFDLEVBRnpCLEVBRTZCLENBRjdCLENBREc7QUFNYkMsRUFBQUEsRUFBRSxFQUFFLENBQ0YsQ0FERSxFQUNDLENBREQsRUFDUSxDQURSLEVBQ1csQ0FEWCxFQUNpQixDQURqQixFQUNvQixDQURwQixFQUVGLENBRkUsRUFFQyxDQUZELEVBRVEsQ0FGUixFQUVXLENBRlgsRUFFaUIsQ0FGakIsRUFFb0IsQ0FGcEI7QUFOUyxDQUFqQiIsInNvdXJjZXNDb250ZW50IjpbIi8vIFBsYW5lIC8gYmlsbGJvYXJkXG4vL1xuLy8gIHYxLS0tLS0tdjBcbi8vICB8ICAgICAgIHxcbi8vICB8ICAgeCAgIHxcbi8vICB8ICAgICAgIHxcbi8vICB2Mi0tLS0tLXYzXG5cbm1vZHVsZS5leHBvcnRzID0ge1xuICAgIHZlcnRpY2VzOiBbXG4gICAgICAuNSwgLjUsIDAsICAgIC0uNSwgLjUsIDAsICAgLS41LC0uNSwgMCxcbiAgICAgIC41LCAuNSwgMCwgICAgLS41LC0uNSwgMCwgICAgLjUsLS41LCAwXG4gICAgXSxcbiAgICBcbiAgICB1djogW1xuICAgICAgMSwgMSwgICAgIDAsIDEsICAgIDAsIDAsXG4gICAgICAxLCAxLCAgICAgMCwgMCwgICAgMSwgMFxuICAgIF0sXG4gIH07Il0sImZpbGUiOiIuL3NyYy9tb2RlbHMvcGxhbmUuanMuanMiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/models/plane.js\n")},"./src/models/pyramid.js":module=>{eval("// Pyramid\n//\n//      ^\n//     /\\\\\n//    // \\ \\\n//   /+-x-\\-+\n//  //     \\/\n//  +------+\nmodule.exports = {\n  vertices: [-.5, -.5, .5, .5, -.5, .5, 0, .5, 0, // Front\n  .5, -.5, .5, .5, -.5, -.5, 0, .5, 0, // Right\n  .5, -.5, -.5, -.5, -.5, -.5, 0, .5, 0, // Back\n  -.5, -.5, -.5, -.5, -.5, .5, 0, .5, 0, // Left\n  .5, -.5, .5, -.5, -.5, .5, -.5, -.5, -.5, // down\n  .5, -.5, .5, -.5, -.5, -.5, .5, -.5, -.5],\n  uv: [0, 0, 1, 0, .5, 1, // Front\n  0, 0, 1, 0, .5, 1, // Right\n  0, 0, 1, 0, .5, 1, // Back\n  0, 0, 1, 0, .5, 1, // Left\n  1, 1, 0, 1, 0, 0, // down\n  1, 1, 0, 0, 1, 0]\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9XLy4vc3JjL21vZGVscy9weXJhbWlkLmpzPzc0NjkiXSwibmFtZXMiOlsibW9kdWxlIiwiZXhwb3J0cyIsInZlcnRpY2VzIiwidXYiXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQUEsTUFBTSxDQUFDQyxPQUFQLEdBQWlCO0FBQ2JDLEVBQUFBLFFBQVEsRUFBRSxDQUNSLENBQUMsRUFETyxFQUNKLENBQUMsRUFERyxFQUNDLEVBREQsRUFDTyxFQURQLEVBQ1UsQ0FBQyxFQURYLEVBQ2UsRUFEZixFQUNzQixDQUR0QixFQUN5QixFQUR6QixFQUM4QixDQUQ5QixFQUNrQztBQUN6QyxJQUZPLEVBRUosQ0FBQyxFQUZHLEVBRUMsRUFGRCxFQUVPLEVBRlAsRUFFVSxDQUFDLEVBRlgsRUFFYyxDQUFDLEVBRmYsRUFFc0IsQ0FGdEIsRUFFeUIsRUFGekIsRUFFOEIsQ0FGOUIsRUFFa0M7QUFDekMsSUFITyxFQUdKLENBQUMsRUFIRyxFQUdBLENBQUMsRUFIRCxFQUdNLENBQUMsRUFIUCxFQUdVLENBQUMsRUFIWCxFQUdjLENBQUMsRUFIZixFQUdzQixDQUh0QixFQUd5QixFQUh6QixFQUc4QixDQUg5QixFQUdrQztBQUMxQyxHQUFDLEVBSk8sRUFJSixDQUFDLEVBSkcsRUFJQSxDQUFDLEVBSkQsRUFJTSxDQUFDLEVBSlAsRUFJVSxDQUFDLEVBSlgsRUFJZSxFQUpmLEVBSXNCLENBSnRCLEVBSXlCLEVBSnpCLEVBSThCLENBSjlCLEVBSWtDO0FBQ3pDLElBTE8sRUFLSixDQUFDLEVBTEcsRUFLQyxFQUxELEVBS00sQ0FBQyxFQUxQLEVBS1UsQ0FBQyxFQUxYLEVBS2UsRUFMZixFQUtvQixDQUFDLEVBTHJCLEVBS3dCLENBQUMsRUFMekIsRUFLNEIsQ0FBQyxFQUw3QixFQUtpQztBQUN4QyxJQU5PLEVBTUosQ0FBQyxFQU5HLEVBTUMsRUFORCxFQU1NLENBQUMsRUFOUCxFQU1VLENBQUMsRUFOWCxFQU1jLENBQUMsRUFOZixFQU1xQixFQU5yQixFQU13QixDQUFDLEVBTnpCLEVBTTRCLENBQUMsRUFON0IsQ0FERztBQVNiQyxFQUFBQSxFQUFFLEVBQUUsQ0FDRixDQURFLEVBQ0MsQ0FERCxFQUNNLENBRE4sRUFDUyxDQURULEVBQ2EsRUFEYixFQUNpQixDQURqQixFQUNxQjtBQUN2QixHQUZFLEVBRUMsQ0FGRCxFQUVNLENBRk4sRUFFUyxDQUZULEVBRWEsRUFGYixFQUVpQixDQUZqQixFQUVxQjtBQUN2QixHQUhFLEVBR0MsQ0FIRCxFQUdNLENBSE4sRUFHUyxDQUhULEVBR2EsRUFIYixFQUdpQixDQUhqQixFQUdxQjtBQUN2QixHQUpFLEVBSUMsQ0FKRCxFQUlNLENBSk4sRUFJUyxDQUpULEVBSWEsRUFKYixFQUlpQixDQUpqQixFQUlxQjtBQUN2QixHQUxFLEVBS0MsQ0FMRCxFQUtNLENBTE4sRUFLUyxDQUxULEVBS2MsQ0FMZCxFQUtpQixDQUxqQixFQUtxQjtBQUN2QixHQU5FLEVBTUMsQ0FORCxFQU1NLENBTk4sRUFNUyxDQU5ULEVBTWMsQ0FOZCxFQU1pQixDQU5qQjtBQVRTLENBQWpCIiwic291cmNlc0NvbnRlbnQiOlsiLy8gUHlyYW1pZFxuLy9cbi8vICAgICAgXlxuLy8gICAgIC9cXFxcXG4vLyAgICAvLyBcXCBcXFxuLy8gICAvKy14LVxcLStcbi8vICAvLyAgICAgXFwvXG4vLyAgKy0tLS0tLStcblxubW9kdWxlLmV4cG9ydHMgPSB7XG4gICAgdmVydGljZXM6IFtcbiAgICAgIC0uNSwtLjUsIC41LCAgIC41LC0uNSwgLjUsICAgIDAsIC41LCAgMCwgIC8vIEZyb250XG4gICAgICAgLjUsLS41LCAuNSwgICAuNSwtLjUsLS41LCAgICAwLCAuNSwgIDAsICAvLyBSaWdodFxuICAgICAgIC41LC0uNSwtLjUsICAtLjUsLS41LC0uNSwgICAgMCwgLjUsICAwLCAgLy8gQmFja1xuICAgICAgLS41LC0uNSwtLjUsICAtLjUsLS41LCAuNSwgICAgMCwgLjUsICAwLCAgLy8gTGVmdFxuICAgICAgIC41LC0uNSwgLjUsICAtLjUsLS41LCAuNSwgIC0uNSwtLjUsLS41LCAvLyBkb3duXG4gICAgICAgLjUsLS41LCAuNSwgIC0uNSwtLjUsLS41LCAgIC41LC0uNSwtLjVcbiAgICBdLFxuICAgIHV2OiBbXG4gICAgICAwLCAwLCAgIDEsIDAsICAuNSwgMSwgIC8vIEZyb250XG4gICAgICAwLCAwLCAgIDEsIDAsICAuNSwgMSwgIC8vIFJpZ2h0XG4gICAgICAwLCAwLCAgIDEsIDAsICAuNSwgMSwgIC8vIEJhY2tcbiAgICAgIDAsIDAsICAgMSwgMCwgIC41LCAxLCAgLy8gTGVmdFxuICAgICAgMSwgMSwgICAwLCAxLCAgIDAsIDAsICAvLyBkb3duXG4gICAgICAxLCAxLCAgIDAsIDAsICAgMSwgMFxuICAgIF1cbn07Il0sImZpbGUiOiIuL3NyYy9tb2RlbHMvcHlyYW1pZC5qcy5qcyIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/models/pyramid.js\n")},"./src/models/sphere.js":module=>{eval("// Sphere\n//\n//          =   =\n//       =         =\n//      =           =\n//     =      x      =\n//      =           =\n//       =         =\n//          =   =\n// module.exports = ((i, ai, j, aj, p1, p2, vertices = [], indices = [], uv = [], precision = 15) => {\n//     for (j = 0; j <= precision; j++) {\n//       aj = j * Math.PI / precision;\n//       for (i = 0; i <= precision; i++) {\n//         ai = i * 2 * Math.PI / precision;\n//         vertices.push(+(Math.sin(ai) * Math.sin(aj)/2).toFixed(6), +(Math.cos(aj)/2).toFixed(6), +(Math.cos(ai) * Math.sin(aj)/2).toFixed(6));\n//         uv.push((Math.sin((i/precision)))*3.5, -Math.sin(j/precision))\n//         if(i < precision && j < precision){\n//           p1 = j * (precision+1) + i;\n//           p2 = p1 + (precision+1);\n//           indices.push(p1, p2, (p1 + 1), (p1 + 1), p2, (p2 + 1));\n//         }\n//       }\n//     }\n// })();\nmodule.exports = {};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9XLy4vc3JjL21vZGVscy9zcGhlcmUuanM/MjgwNCJdLCJuYW1lcyI6WyJtb2R1bGUiLCJleHBvcnRzIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQUEsTUFBTSxDQUFDQyxPQUFQLEdBQWlCLEVBQWpCIiwic291cmNlc0NvbnRlbnQiOlsiLy8gU3BoZXJlXG4vL1xuLy8gICAgICAgICAgPSAgID1cbi8vICAgICAgID0gICAgICAgICA9XG4vLyAgICAgID0gICAgICAgICAgID1cbi8vICAgICA9ICAgICAgeCAgICAgID1cbi8vICAgICAgPSAgICAgICAgICAgPVxuLy8gICAgICAgPSAgICAgICAgID1cbi8vICAgICAgICAgID0gICA9XG5cbi8vIG1vZHVsZS5leHBvcnRzID0gKChpLCBhaSwgaiwgYWosIHAxLCBwMiwgdmVydGljZXMgPSBbXSwgaW5kaWNlcyA9IFtdLCB1diA9IFtdLCBwcmVjaXNpb24gPSAxNSkgPT4ge1xuLy8gICAgIGZvciAoaiA9IDA7IGogPD0gcHJlY2lzaW9uOyBqKyspIHtcbi8vICAgICAgIGFqID0gaiAqIE1hdGguUEkgLyBwcmVjaXNpb247XG4vLyAgICAgICBmb3IgKGkgPSAwOyBpIDw9IHByZWNpc2lvbjsgaSsrKSB7XG4vLyAgICAgICAgIGFpID0gaSAqIDIgKiBNYXRoLlBJIC8gcHJlY2lzaW9uO1xuLy8gICAgICAgICB2ZXJ0aWNlcy5wdXNoKCsoTWF0aC5zaW4oYWkpICogTWF0aC5zaW4oYWopLzIpLnRvRml4ZWQoNiksICsoTWF0aC5jb3MoYWopLzIpLnRvRml4ZWQoNiksICsoTWF0aC5jb3MoYWkpICogTWF0aC5zaW4oYWopLzIpLnRvRml4ZWQoNikpO1xuLy8gICAgICAgICB1di5wdXNoKChNYXRoLnNpbigoaS9wcmVjaXNpb24pKSkqMy41LCAtTWF0aC5zaW4oai9wcmVjaXNpb24pKVxuLy8gICAgICAgICBpZihpIDwgcHJlY2lzaW9uICYmIGogPCBwcmVjaXNpb24pe1xuLy8gICAgICAgICAgIHAxID0gaiAqIChwcmVjaXNpb24rMSkgKyBpO1xuLy8gICAgICAgICAgIHAyID0gcDEgKyAocHJlY2lzaW9uKzEpO1xuLy8gICAgICAgICAgIGluZGljZXMucHVzaChwMSwgcDIsIChwMSArIDEpLCAocDEgKyAxKSwgcDIsIChwMiArIDEpKTtcbi8vICAgICAgICAgfVxuLy8gICAgICAgfVxuLy8gICAgIH1cbi8vIH0pKCk7XG5tb2R1bGUuZXhwb3J0cyA9IHt9Il0sImZpbGUiOiIuL3NyYy9tb2RlbHMvc3BoZXJlLmpzLmpzIiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/models/sphere.js\n")},"./src/shaders/baseFragment.glsl":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval('/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ("#version 300 es\\nprecision highp float;\\nin vec4 v_pos, v_col, v_uv, v_normal;\\nuniform vec3 light;\\nuniform vec4 o;\\nuniform sampler2D sampler;\\nout vec4 c;\\n\\nvoid main() {\\n\\n    c = mix(texture(sampler, v_uv.xy), v_col, o[3]);\\n\\n    if(o[1] > 0.){\\n        // output = vec4(base color\'s RGB * (directional light + ambient light)), base color\'s Alpha) \\n        if(o[0] > 0.){\\n        c = vec4(c.rgb * (max(dot(light, -normalize(vec3(v_normal.xyz))), 0.0) + o[2]), c.a);\\n        }\\n        else {\\n        c = vec4(c.rgb * (max(dot(light, -normalize(cross(dFdx(v_pos.xyz), dFdy(v_pos.xyz)))), 0.0) + o[2]), c.a);\\n        }\\n    }\\n}");//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvc2hhZGVycy9iYXNlRnJhZ21lbnQuZ2xzbC5qcyIsIm1hcHBpbmdzIjoiOzs7QUFBQSxpRUFBZSx3Q0FBd0MsdUNBQXVDLHFCQUFxQixpQkFBaUIsNEJBQTRCLGFBQWEsaUJBQWlCLHdEQUF3RCxzQkFBc0IsZ0lBQWdJLCtGQUErRixXQUFXLGdCQUFnQixvSEFBb0gsV0FBVyxPQUFPLEdBQUcsQ0FBQyIsInNvdXJjZXMiOlsid2VicGFjazovL1cvLi9zcmMvc2hhZGVycy9iYXNlRnJhZ21lbnQuZ2xzbD8wYjA1Il0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBkZWZhdWx0IFwiI3ZlcnNpb24gMzAwIGVzXFxucHJlY2lzaW9uIGhpZ2hwIGZsb2F0O1xcbmluIHZlYzQgdl9wb3MsIHZfY29sLCB2X3V2LCB2X25vcm1hbDtcXG51bmlmb3JtIHZlYzMgbGlnaHQ7XFxudW5pZm9ybSB2ZWM0IG87XFxudW5pZm9ybSBzYW1wbGVyMkQgc2FtcGxlcjtcXG5vdXQgdmVjNCBjO1xcblxcbnZvaWQgbWFpbigpIHtcXG5cXG4gICAgYyA9IG1peCh0ZXh0dXJlKHNhbXBsZXIsIHZfdXYueHkpLCB2X2NvbCwgb1szXSk7XFxuXFxuICAgIGlmKG9bMV0gPiAwLil7XFxuICAgICAgICAvLyBvdXRwdXQgPSB2ZWM0KGJhc2UgY29sb3IncyBSR0IgKiAoZGlyZWN0aW9uYWwgbGlnaHQgKyBhbWJpZW50IGxpZ2h0KSksIGJhc2UgY29sb3IncyBBbHBoYSkgXFxuICAgICAgICBpZihvWzBdID4gMC4pe1xcbiAgICAgICAgYyA9IHZlYzQoYy5yZ2IgKiAobWF4KGRvdChsaWdodCwgLW5vcm1hbGl6ZSh2ZWMzKHZfbm9ybWFsLnh5eikpKSwgMC4wKSArIG9bMl0pLCBjLmEpO1xcbiAgICAgICAgfVxcbiAgICAgICAgZWxzZSB7XFxuICAgICAgICBjID0gdmVjNChjLnJnYiAqIChtYXgoZG90KGxpZ2h0LCAtbm9ybWFsaXplKGNyb3NzKGRGZHgodl9wb3MueHl6KSwgZEZkeSh2X3Bvcy54eXopKSkpLCAwLjApICsgb1syXSksIGMuYSk7XFxuICAgICAgICB9XFxuICAgIH1cXG59XCI7Il0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/shaders/baseFragment.glsl\n')},"./src/shaders/baseVertex.glsl":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval('/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ("#version 300 es\\nprecision highp float;\\nin vec4 pos, col, uv, normal;\\nuniform mat4 pv, eye, m, im;\\nuniform vec4 bb;\\nout vec4 v_pos, v_col, v_uv, v_normal;\\n\\nvoid main() {\\n    gl_Position = pv * (\\n        v_pos = bb.z > 0.\\n        ? m[3] + eye * (pos * bb)\\n        : m * pos\\n    );\\n    v_col = col;\\n    v_uv = uv;\\n    v_normal = transpose(inverse(m)) * normal;\\n}");//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvc2hhZGVycy9iYXNlVmVydGV4Lmdsc2wuanMiLCJtYXBwaW5ncyI6Ijs7O0FBQUEsaUVBQWUsd0NBQXdDLCtCQUErQiw4QkFBOEIsa0JBQWtCLHdDQUF3QyxpQkFBaUIsbUhBQW1ILGtCQUFrQixnQkFBZ0IsZ0RBQWdELEdBQUcsQ0FBQyIsInNvdXJjZXMiOlsid2VicGFjazovL1cvLi9zcmMvc2hhZGVycy9iYXNlVmVydGV4Lmdsc2w/OGZkYSJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgZGVmYXVsdCBcIiN2ZXJzaW9uIDMwMCBlc1xcbnByZWNpc2lvbiBoaWdocCBmbG9hdDtcXG5pbiB2ZWM0IHBvcywgY29sLCB1diwgbm9ybWFsO1xcbnVuaWZvcm0gbWF0NCBwdiwgZXllLCBtLCBpbTtcXG51bmlmb3JtIHZlYzQgYmI7XFxub3V0IHZlYzQgdl9wb3MsIHZfY29sLCB2X3V2LCB2X25vcm1hbDtcXG5cXG52b2lkIG1haW4oKSB7XFxuICAgIGdsX1Bvc2l0aW9uID0gcHYgKiAoXFxuICAgICAgICB2X3BvcyA9IGJiLnogPiAwLlxcbiAgICAgICAgPyBtWzNdICsgZXllICogKHBvcyAqIGJiKVxcbiAgICAgICAgOiBtICogcG9zXFxuICAgICk7XFxuICAgIHZfY29sID0gY29sO1xcbiAgICB2X3V2ID0gdXY7XFxuICAgIHZfbm9ybWFsID0gdHJhbnNwb3NlKGludmVyc2UobSkpICogbm9ybWFsO1xcbn1cIjsiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/shaders/baseVertex.glsl\n')}},__webpack_module_cache__={};function __webpack_require__(Q){var F=__webpack_module_cache__[Q];if(void 0!==F)return F.exports;var B=__webpack_module_cache__[Q]={id:Q,loaded:!1,exports:{}};return __webpack_modules__[Q](B,B.exports,__webpack_require__),B.loaded=!0,B.exports}__webpack_require__.n=Q=>{var F=Q&&Q.__esModule?()=>Q.default:()=>Q;return __webpack_require__.d(F,{a:F}),F},__webpack_require__.d=(Q,F)=>{for(var B in F)__webpack_require__.o(F,B)&&!__webpack_require__.o(Q,B)&&Object.defineProperty(Q,B,{enumerable:!0,get:F[B]})},__webpack_require__.o=(Q,F)=>Object.prototype.hasOwnProperty.call(Q,F),__webpack_require__.r=Q=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(Q,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(Q,"__esModule",{value:!0})},__webpack_require__.nmd=Q=>(Q.paths=[],Q.children||(Q.children=[]),Q);var __webpack_exports__=__webpack_require__("./src/index.js");W=__webpack_exports__})();